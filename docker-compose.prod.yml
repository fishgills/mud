services:
  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-mud}
      POSTGRES_USER: ${POSTGRES_USER:-mud}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?POSTGRES_PASSWORD must be set}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -U ${POSTGRES_USER:-mud} -d ${POSTGRES_DB:-mud}',
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mud_internal

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mud_internal

  dm:
    image: ${REGION}-docker.pkg.dev/${PROJECT_ID}/${ARTIFACT_REPO}/dm:${APP_TAG:-latest}
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://${POSTGRES_USER:-mud}:${POSTGRES_PASSWORD:?POSTGRES_PASSWORD must be set}@postgres:5432/${POSTGRES_DB:-mud}
      REDIS_URL: redis://redis:6379/0
      WORLD_SERVICE_URL: ${WORLD_SERVICE_URL:-http://world:3001/world}
      OPENAI_API_KEY: ${OPENAI_API_KEY:?OPENAI_API_KEY must be set}
    expose:
      - '3000'
    networks:
      - mud_internal

  world:
    image: ${REGION}-docker.pkg.dev/${PROJECT_ID}/${ARTIFACT_REPO}/world:${APP_TAG:-latest}
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://${POSTGRES_USER:-mud}:${POSTGRES_PASSWORD:?POSTGRES_PASSWORD must be set}@postgres:5432/${POSTGRES_DB:-mud}
      REDIS_URL: redis://redis:6379/0
    expose:
      - '3001'
    networks:
      - mud_internal

  slack-bot:
    image: ${REGION}-docker.pkg.dev/${PROJECT_ID}/${ARTIFACT_REPO}/slack-bot:${APP_TAG:-latest}
    restart: unless-stopped
    depends_on:
      dm:
        condition: service_started
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 3002
      REDIS_URL: redis://redis:6379/0
      DM_API_BASE_URL: ${DM_API_BASE_URL:-http://dm:3000}
      WORLD_API_BASE_URL: ${WORLD_API_BASE_URL:-http://world:3001/world}
      SLACK_BOT_TOKEN: ${SLACK_BOT_TOKEN:?SLACK_BOT_TOKEN must be set}
      SLACK_SIGNING_SECRET: ${SLACK_SIGNING_SECRET:?SLACK_SIGNING_SECRET must be set}
      SLACK_APP_TOKEN: ${SLACK_APP_TOKEN:?SLACK_APP_TOKEN must be set}
      SLACK_CLIENT_ID: ${SLACK_CLIENT_ID:?SLACK_CLIENT_ID must be set}
      SLACK_CLIENT_SECRET: ${SLACK_CLIENT_SECRET:?SLACK_CLIENT_SECRET must be set}
      SLACK_STATE_SECRET: ${SLACK_STATE_SECRET:?SLACK_STATE_SECRET must be set}
    expose:
      - '3002'
    networks:
      - mud_internal

  tick:
    image: ${REGION}-docker.pkg.dev/${PROJECT_ID}/${ARTIFACT_REPO}/tick:${APP_TAG:-latest}
    restart: unless-stopped
    depends_on:
      dm:
        condition: service_started
    environment:
      NODE_ENV: production
      PORT: 3003
      DM_API_BASE_URL: ${DM_API_BASE_URL:-http://dm:3000}
      TICK_INTERVAL_MS: ${TICK_INTERVAL_MS:-60000}
      ACTIVITY_THRESHOLD_MINUTES: ${ACTIVITY_THRESHOLD_MINUTES:-30}
    expose:
      - '3003'
    networks:
      - mud_internal

  nginx:
    image: nginx:1.25
    restart: unless-stopped
    depends_on:
      dm:
        condition: service_started
      world:
        condition: service_started
      slack-bot:
        condition: service_started
    ports:
      - '80:80'
    volumes:
      - ./data/nginx:/etc/nginx/conf.d:ro
    networks:
      - mud_internal

  # certbot removed - TLS is handled by the Google HTTPS Load Balancer

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  mud_internal:
    driver: bridge
