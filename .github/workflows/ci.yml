name: CI

on:
  push:
    branches-ignore:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build ${{ matrix.service }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        service:
          - dm
          - world
          - slack-bot
          - tick
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Restore Turborepo cache
        uses: actions/cache@v4
        with:
          path: |
            .turbo
            node_modules/.cache/turbo
          key: ${{ runner.os }}-turbo-${{ matrix.service }}-${{ hashFiles('**/package.json', 'yarn.lock', 'turbo.json') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-${{ matrix.service }}-${{ hashFiles('**/package.json', 'yarn.lock', 'turbo.json') }}-
            ${{ runner.os }}-turbo-${{ matrix.service }}-

      - name: Generate Prisma client
        run: yarn --cwd libs/database generate

      - name: Run GraphQL codegen
        if: ${{ matrix.service == 'dm' || matrix.service == 'slack-bot' }}
        run: yarn turbo codegen --filter=@mud/${{ matrix.service }}

      - name: Build ${{ matrix.service }}
        run: yarn turbo build --filter=@mud/${{ matrix.service }}

  lint:
    name: Lint ${{ matrix.service }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        service:
          - dm
          - world
          - slack-bot
          - tick
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Restore Turborepo cache
        uses: actions/cache@v4
        with:
          path: |
            .turbo
            node_modules/.cache/turbo
          key: ${{ runner.os }}-turbo-lint-${{ matrix.service }}-${{ hashFiles('**/package.json', 'yarn.lock', 'turbo.json') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-lint-${{ matrix.service }}-${{ hashFiles('**/package.json', 'yarn.lock', 'turbo.json') }}-
            ${{ runner.os }}-turbo-lint-${{ matrix.service }}-

      - name: Lint ${{ matrix.service }}
        run: yarn turbo lint --filter=@mud/${{ matrix.service }}

  test:
    name: Test ${{ matrix.service }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        service:
          - dm
          - world
          - slack-bot
          - tick
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Restore Turborepo cache
        uses: actions/cache@v4
        with:
          path: |
            .turbo
            node_modules/.cache/turbo
          key: ${{ runner.os }}-turbo-test-${{ matrix.service }}-${{ hashFiles('**/package.json', 'yarn.lock', 'turbo.json') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-test-${{ matrix.service }}-${{ hashFiles('**/package.json', 'yarn.lock', 'turbo.json') }}-
            ${{ runner.os }}-turbo-test-${{ matrix.service }}-

      - name: Generate Prisma client
        run: yarn --cwd libs/database generate

      - name: Run GraphQL codegen
        if: ${{ matrix.service == 'dm' || matrix.service == 'slack-bot' }}
        run: yarn turbo codegen --filter=@mud/${{ matrix.service }}

      - name: Test ${{ matrix.service }}
        run: yarn turbo test --filter=@mud/${{ matrix.service }}
