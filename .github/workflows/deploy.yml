name: Deploy

on:
  push:
    branches: [main]
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
      id-token: write
    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      REGION: ${{ secrets.GCP_REGION }}
      ARTIFACT_REPO: mud-registry
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud (Workload Identity Federation)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_DEPLOY_SA }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker auth for Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: Compute image tag
        id: tag
        run: echo "tag=$(git rev-parse --short=12 HEAD)" >> "$GITHUB_OUTPUT"

      - name: Build images
        run: |
          set -euo pipefail
          export TAG=${{ steps.tag.outputs.tag }}
          docker build -t $REGION-docker.pkg.dev/$PROJECT_ID/$ARTIFACT_REPO/dm:$TAG -f apps/dm/Dockerfile .
          docker build -t $REGION-docker.pkg.dev/$PROJECT_ID/$ARTIFACT_REPO/world:$TAG -f apps/world/Dockerfile .
          docker build -t $REGION-docker.pkg.dev/$PROJECT_ID/$ARTIFACT_REPO/slack-bot:$TAG -f apps/slack-bot/Dockerfile .
          docker build -t $REGION-docker.pkg.dev/$PROJECT_ID/$ARTIFACT_REPO/tick:$TAG -f apps/tick/Dockerfile .

      - name: Push images
        run: |
          set -euo pipefail
          export TAG=${{ steps.tag.outputs.tag }}
          docker push $REGION-docker.pkg.dev/$PROJECT_ID/$ARTIFACT_REPO/dm:$TAG
          docker push $REGION-docker.pkg.dev/$PROJECT_ID/$ARTIFACT_REPO/world:$TAG
          docker push $REGION-docker.pkg.dev/$PROJECT_ID/$ARTIFACT_REPO/slack-bot:$TAG
          docker push $REGION-docker.pkg.dev/$PROJECT_ID/$ARTIFACT_REPO/tick:$TAG

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: production
    permissions:
      contents: read
    env:
      VPS_HOST: ${{ secrets.VPS_HOST }}
      VPS_USER: ${{ secrets.VPS_USER }}
      VPS_DEPLOY_PATH: ${{ secrets.VPS_DEPLOY_PATH }}
      APP_TAG: ${{ needs.build.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate secrets
        run: |
          set -euo pipefail
          missing=()
          for key in VPS_HOST VPS_USER VPS_DEPLOY_PATH VPS_SSH_KEY; do
            if [[ -z "${!key:-}" ]]; then
              missing+=("$key")
            fi
          done
          if [[ ${#missing[@]} -gt 0 ]]; then
            echo "Missing required secrets: ${missing[*]}" >&2
            exit 1
          fi
        env:
          VPS_SSH_KEY: ${{ secrets.VPS_SSH_KEY }}

      - name: Start SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

      - name: Add VPS to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H "$VPS_HOST" >> ~/.ssh/known_hosts

      - name: Deploy to VPS
        run: ./scripts/deploy-vps.sh "$VPS_HOST" "$VPS_USER" "$VPS_DEPLOY_PATH" "$APP_TAG"
